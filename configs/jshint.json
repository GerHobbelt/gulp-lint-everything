{
    "bitwise": true,
    "camelcase": false,
    "browser": true,
    "curly": false,
    "eqeqeq": true,
    "forin": false,
    "freeze": true, // This options prohibits overwriting prototypes of native objects such as Array, Date and so on.
    "nonbsp": true, // This option warns about "non-breaking whitespace" characters.
    "immed": true,
    "indent": 2,
    "latedef": true,
    "maxlen": 110,
    "newcap": false,
    "noarg": true,
    "noempty": true,
    "nonew": false,
    "plusplus": false,
    "quotmark": true,
    "trailing": true,
    "undef": true,
    "unused": true,
    "maxdepth": 3, // maximum number of nested blocks inside a function
    "maxstatements": 50, // max number of statements per function

    "asi"           : false,     // true: Tolerate Automatic Semicolon Insertion (no semicolons)
    "boss"          : false,     // true: Tolerate assignments where comparisons would be expected
    "debug"         : false,     // true: Allow debugger statements e.g. browser breakpoints.
    "eqnull"        : false,     // true: Tolerate use of `== null`
    "es5"           : false,     // true: Allow ES5 syntax (ex: getters and setters)
    "esnext"        : false,     // true: Allow ES.next (ES6) syntax (ex: `const`)
    "moz"           : false,     // true: Allow Mozilla specific syntax (extends and overrides esnext features)
                                 // (ex: `for each`, multiple try/catch, function expressionâ€¦)
    "evil"          : false,     // true: Tolerate use of `eval` and `new Function()`
    "expr"          : false,     // true: Tolerate `ExpressionStatement` as Programs
    "funcscope"     : false,     // true: Tolerate defining variables inside control statements
    "globalstrict"  : false,     // true: Allow global "use strict" (also enables 'strict')
    "iterator"      : false,     // true: Tolerate using the `__iterator__` property
    "lastsemic"     : false,     // true: Tolerate omitting a semicolon for the last statement of a 1-line block
    "laxbreak"      : false,     // true: Tolerate possibly unsafe line breakings
    "laxcomma"      : false,     // true: Tolerate comma-first style coding
    "loopfunc"      : false,     // true: Tolerate functions being defined in loops
    "multistr"      : false,     // true: Tolerate multi-line strings
    "proto"         : false,     // true: Tolerate using the `__proto__` property
    "scripturl"     : false,     // true: Tolerate script-targeted URLs
    "smarttabs"     : false,     // true: Tolerate mixed tabs/spaces when used for alignment
    "shadow"        : false,     // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
    "sub"           : false,     // true: Tolerate using `[]` notation when it can still be expressed in dot notation
    "supernew"      : false,     // true: Tolerate `new function () { ... };` and `new Object;`
    "validthis"     : false,     // true: Tolerate using this in a non-constructor function

    "browser"       : false,
    "couch"         : false,
    "devel"         : true,
    "dojo"          : false,
    "jquery"        : false,
    "mootools"      : false,
    "node"          : true,
    "nonstandard"   : false,
    "prototypejs"   : false,
    "rhino"         : false,
    "worker"        : false,
    "wsh"           : false,
    "yui"           : false,

    "nomen"         : false,
    "onevar"        : false,
    "passfail"      : false,
    "white"         : false,

    "globals": {
    }
}
